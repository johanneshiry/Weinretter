name: Docker

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*


env:
  # TODO: Change variable to your image's name.
  FRONTEND_IMAGE_NAME: wr_frontend
  BACKEND_IMAGE_NAME: wr_backend


jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build backend image
        run: docker build backend --file backend/Dockerfile --tag wr_backend

      - name: Build frontend image
        run: docker build frontend --file frontend/Dockerfile --tag wr_frontend

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image wr_backend
        run: |
          IMAGE_ID=docker.pkg.github.com/johanneshiry/weinretter/$BACKEND_IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # ensure there is a tag
          [[ "${{ github.ref }}" == "refs/tags/"* ]] || false
          
          # Strip "v" prefix from tag name
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag wr_backend $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION


      - name: Push image wr_frontend
        run: |
            IMAGE_ID=docker.pkg.github.com/johanneshiry/weinretter/$FRONTEND_IMAGE_NAME
  
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
  
            # ensure there is a tag
            [[ "${{ github.ref }}" == "refs/tags/"* ]] || false
            
            # Strip "v" prefix from tag name
            VERSION=
  
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
  
            docker tag wr_frontend $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
            
  deploy:
       needs: push
       runs-on: ubuntu-latest
       if: github.event_name == 'push' && contains(github.ref, 'release')

       steps:

         - name: ssh
           run: |
               mkdir -p ~/.ssh
               eval $(ssh-agent -s)
               bash -c 'ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")'
               ssh deploy@ec2-54-86-155-155.compute-1.amazonaws.com -o StrictHostKeyChecking=no "cd Weinretter && git fetch && git fetch --tags && git checkout -f ${{ github.ref }} && git pull && docker-compose up -d --force-recreate --build"

  
