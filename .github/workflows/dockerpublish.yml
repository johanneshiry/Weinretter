name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - deploy

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  FRONTEND_IMAGE_NAME: wr_frontend
  BACKEND_IMAGE_NAME: wr_backend


jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     # - name: Run tests
  #     #   run: |
  #     #     if [ -f docker-compose.test.yml ]; then
  #     #       docker-compose --file docker-compose.test.yml build
  #     #       docker-compose --file docker-compose.test.yml run sut
  #     #     else
  #     #       docker build . --file Dockerfile
  #     #     fi
      
  #     - name: test build
  #       run: |
  #         docker-compose build
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build backend image
        run: docker build backend --file backend/Dockerfile --tag wr_backend

      - name: Build frontend image
        run: docker build frontend --file frontend/Dockerfile --tag wr_frontend

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image wr_backend
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$BACKEND_IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag wr_backend $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION


      - name: Push image wr_frontend
        run: |
            IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$FRONTEND_IMAGE_NAME
  
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
  
            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
  
            # Use Docker `latest` tag convention
            [ "$VERSION" == "master" ] && VERSION=latest
  
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
  
            docker tag wr_frontend $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
  
  
  